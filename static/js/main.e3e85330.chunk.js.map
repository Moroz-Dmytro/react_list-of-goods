{"version":3,"sources":["MainContent/MainContent.tsx","Button/Button.tsx","App.tsx","index.tsx"],"names":["SortType","Button","React","memo","props","name","action","active","type","className","classNames","onClick","possibleLength","MainContent","state","isReversed","sortBy","default","minLength","chooseMinLength","event","setState","target","value","reverse","sortAlphabetically","alphabetically","sortByLength","length","reset","getVisibleGoods","goods","visibleGoods","filter","item","sort","firstGood","secondGood","localeCompare","this","goodsFromServer","onChange","map","Component","App","showMainBlock","showContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3e85330.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '../Button';\n\nconst possibleLength: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nenum SortType {\n  default,\n  alphabetically,\n  length,\n}\n\ninterface Props {\n  goodsFromServer: string[];\n}\n\ninterface State {\n  isReversed: boolean;\n  sortBy: SortType,\n  minLength: number,\n}\n\nexport class MainContent extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: SortType.default,\n    minLength: 1,\n  };\n\n  chooseMinLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      minLength: +event.target.value,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: SortType.alphabetically,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortType.length,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.default,\n      minLength: 1,\n    });\n  };\n\n  getVisibleGoods = (goods: string[]) => {\n    const {\n      isReversed,\n      sortBy,\n      minLength,\n    } = this.state;\n    const visibleGoods = goods.filter(item => item.length > minLength);\n\n    visibleGoods.sort(\n      (firstGood, secondGood) => {\n        switch (sortBy) {\n          case SortType.alphabetically:\n            return firstGood.localeCompare(secondGood);\n          case SortType.length:\n            return firstGood.length - secondGood.length;\n          default:\n            return 0;\n        }\n      },\n    );\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortBy,\n    } = this.state;\n    const visibleGoods = this.getVisibleGoods(this.props.goodsFromServer);\n\n    return (\n      <div className=\"main\">\n        <select\n          name=\"min-length\"\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n          value={this.state.minLength}\n          onChange={this.chooseMinLength}\n        >\n          {possibleLength.map(\n            item => (\n              <option value={item}>\n                {item}\n              </option>\n            ),\n          )}\n        </select>\n\n        <ul className=\"main__list\">\n          {\n            visibleGoods.map(item => (\n              <li\n                key={item}\n                className=\"main__item\"\n              >\n                {item}\n              </li>\n            ))\n          }\n        </ul>\n\n        <div className=\"main__buttons\">\n          <Button\n            name=\"Reverse\"\n            action={this.reverse}\n            active={isReversed}\n          />\n          <Button\n            name=\"Sort alphabetically\"\n            action={this.sortAlphabetically}\n            active={sortBy === SortType.alphabetically}\n          />\n          <Button\n            name=\"Sort by length\"\n            action={this.sortByLength}\n            active={sortBy === SortType.length}\n          />\n          <Button\n            name=\"Reset\"\n            action={this.reset}\n            active={false}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string;\n  action: () => void;\n  active: boolean;\n};\n\nexport const Button: React.FC<Props> = React.memo((props) => {\n  const { name, action, active } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames('btn', { 'btn-success': active, 'btn-danger': !active })}\n      onClick={action}\n    >\n      {name}\n    </button>\n  );\n});\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport { Button } from './Button';\nimport { MainContent } from './MainContent';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  showMainBlock: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    showMainBlock: false,\n  };\n\n  showContent = () => {\n    this.setState({\n      showMainBlock: true,\n    });\n  };\n\n  render() {\n    const { showMainBlock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        { !showMainBlock && <Button name=\"Start\" action={this.showContent} active />}\n        { showMainBlock && (\n          <MainContent goodsFromServer={goodsFromServer} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
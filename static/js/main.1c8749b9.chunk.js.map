{"version":3,"sources":["App.tsx","Button/Button.tsx","index.tsx"],"names":["SortType","Button","React","memo","props","name","action","active","type","className","classNames","onClick","goodsFromServer","possibleLength","App","state","showMainBlock","isReversed","sortBy","default","minLength","showContent","setState","chooseMinLength","event","target","value","reverse","sortAlphabetically","alphabetically","sortByLength","length","reset","this","visibleGoods","filter","item","sort","firstGood","secondGood","localeCompare","onChange","map","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,iGCZQC,EAA0BC,IAAMC,MAAK,SAACC,GACjD,IAAQC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OAEtB,OACE,wBACEC,KAAK,SACLC,UAAWC,IAAW,MAAO,CAAE,cAAeH,EAAQ,cAAeA,IACrEI,QAASL,EAHX,SAKGD,ODZDO,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA2B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,SAExDb,O,qBAAAA,I,mCAAAA,I,oBAAAA,M,SAqJUc,E,4MAvIbC,MAAe,CACbC,eAAe,EACfC,YAAY,EACZC,OAAQlB,EAASmB,QACjBC,UAAW,G,EAGbC,YAAc,WACZ,EAAKC,SAAS,CACZN,eAAe,K,EAInBO,gBAAkB,SAACC,GACjB,EAAKF,SAAS,CACZF,WAAYI,EAAMC,OAAOC,S,EAI7BC,QAAU,WACR,EAAKL,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBW,mBAAqB,WACnB,EAAKN,SAAS,CACZJ,OAAQlB,EAAS6B,kB,EAIrBC,aAAe,WACb,EAAKR,SAAS,CACZJ,OAAQlB,EAAS+B,U,EAIrBC,MAAQ,WACN,EAAKV,SAAS,CACZL,YAAY,EACZC,OAAQlB,EAASmB,QACjBC,UAAW,K,4CAIf,WACE,MAKIa,KAAKlB,MAJPC,EADF,EACEA,cACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,OACAE,EAJF,EAIEA,UAEIc,EAAetB,EAAgBuB,QAAO,SAAAC,GAAI,OAAIA,EAAKL,OAASX,KAmBlE,OAjBAc,EAAaG,MACX,SAACC,EAAWC,GACV,OAAQrB,GACN,KAAKlB,EAAS6B,eACZ,OAAOS,EAAUE,cAAcD,GACjC,KAAKvC,EAAS+B,OACZ,OAAOO,EAAUP,OAASQ,EAAWR,OACvC,QACE,OAAO,MAKXd,GACFiB,EAAaP,UAIb,sBAAKlB,UAAU,MAAf,UACE,wCACGO,GAAiB,cAACf,EAAD,CAAQI,KAAK,QAAQC,OAAQ2B,KAAKZ,YAAad,QAAM,IACvES,GACA,sBAAKP,UAAU,OAAf,UACE,wBACEJ,KAAK,aACLI,UAAU,cACV,aAAW,yBACXiB,MAAOO,KAAKlB,MAAMK,UAClBqB,SAAUR,KAAKV,gBALjB,SAOGV,EAAe6B,KACd,SAAAN,GAAI,OACF,wBAAQV,MAAOU,EAAf,SACGA,SAMT,oBAAI3B,UAAU,aAAd,SAEIyB,EAAaQ,KAAI,SAAAN,GAAI,OACnB,oBAEE3B,UAAU,aAFZ,SAIG2B,GAHIA,QASb,sBAAK3B,UAAU,gBAAf,UACE,cAACR,EAAD,CACEI,KAAK,UACLC,OAAQ2B,KAAKN,QACbpB,OAAQU,IAEV,cAAChB,EAAD,CACEI,KAAK,sBACLC,OAAQ2B,KAAKL,mBACbrB,OAAQW,IAAWlB,EAAS6B,iBAE9B,cAAC5B,EAAD,CACEI,KAAK,iBACLC,OAAQ2B,KAAKH,aACbvB,OAAQW,IAAWlB,EAAS+B,SAE9B,cAAC9B,EAAD,CACEI,KAAK,QACLC,OAAQ2B,KAAKD,MACbzB,QAAQ,iB,GA9HNL,IAAMyC,WE/BxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c8749b9.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport { Button } from './Button';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst possibleLength: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nenum SortType {\n  default,\n  alphabetically,\n  length,\n}\n\ntype State = {\n  showMainBlock: boolean;\n  isReversed: boolean;\n  sortBy: SortType,\n  minLength: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    showMainBlock: false,\n    isReversed: false,\n    sortBy: SortType.default,\n    minLength: 1,\n  };\n\n  showContent = () => {\n    this.setState({\n      showMainBlock: true,\n    });\n  };\n\n  chooseMinLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      minLength: +event.target.value,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: SortType.alphabetically,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortType.length,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.default,\n      minLength: 1,\n    });\n  };\n\n  render() {\n    const {\n      showMainBlock,\n      isReversed,\n      sortBy,\n      minLength,\n    } = this.state;\n    const visibleGoods = goodsFromServer.filter(item => item.length > minLength);\n\n    visibleGoods.sort(\n      (firstGood, secondGood) => {\n        switch (sortBy) {\n          case SortType.alphabetically:\n            return firstGood.localeCompare(secondGood);\n          case SortType.length:\n            return firstGood.length - secondGood.length;\n          default:\n            return 0;\n        }\n      },\n    );\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        { !showMainBlock && <Button name=\"Start\" action={this.showContent} active />}\n        { showMainBlock && (\n          <div className=\"main\">\n            <select\n              name=\"min-length\"\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              value={this.state.minLength}\n              onChange={this.chooseMinLength}\n            >\n              {possibleLength.map(\n                item => (\n                  <option value={item}>\n                    {item}\n                  </option>\n                ),\n              )}\n            </select>\n\n            <ul className=\"main__list\">\n              {\n                visibleGoods.map(item => (\n                  <li\n                    key={item}\n                    className=\"main__item\"\n                  >\n                    {item}\n                  </li>\n                ))\n              }\n            </ul>\n\n            <div className=\"main__buttons\">\n              <Button\n                name=\"Reverse\"\n                action={this.reverse}\n                active={isReversed}\n              />\n              <Button\n                name=\"Sort alphabetically\"\n                action={this.sortAlphabetically}\n                active={sortBy === SortType.alphabetically}\n              />\n              <Button\n                name=\"Sort by length\"\n                action={this.sortByLength}\n                active={sortBy === SortType.length}\n              />\n              <Button\n                name=\"Reset\"\n                action={this.reset}\n                active={false}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string;\n  action: () => void;\n  active: boolean;\n};\n\nexport const Button: React.FC<Props> = React.memo((props) => {\n  const { name, action, active } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames('btn', { 'btn-success': active, 'btn-danger': !active })}\n      onClick={action}\n    >\n      {name}\n    </button>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}